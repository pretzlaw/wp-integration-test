language: php

php:
  # see http://php.net/supported-versions.php
  - '7.0' # Until 3 Dec 2018
  - '7.1' # Until 1 Dec 2019
  - '7.2' # Until 30 Nov 2020
  - '7.3' # RC

env:
  global:
    - PHPUNIT_VERSION=~6
    - PHPUNIT_MOCK_VERSION=~5
  matrix:
    # see https://codex.wordpress.org/WordPress_Versions
    - WP_VERSION=4.0
    - WP_VERSION=4.9
    - WP_VERSION=5.0
    - WP_VERSION=nightly

matrix:
  # in the process to achieve support
  allow_failures:
  - php: '5.6'
  - php: '7.1'
  - php: '7.2'
  - php: '7.3'
  - env: WP_VERSION=nightly
  include:
  # additional combination among env (as above)
  - php: '5.6'
    env: PHPUNIT_VERSION=~5 PHPUNIT_MOCK_VERSION=~3 WP_VERSION=4.9
  - php: '7.1'
    env: PHPUNIT_VERSION=~7 PHPUNIT_MOCK_VERSION=~6 WP_VERSION=4.9

services:
  - mysql

before_install:
  - mysql -e 'CREATE DATABASE dev;'
  # Try supporting other versions
  - composer require phpunit/phpunit-mock-objects:$PHPUNIT_MOCK_VERSION phpunit/phpunit:$PHPUNIT_VERSION

install:
  - composer update
  # Using WP-CLI instead of Composer because this way we can use the env matrix (above).
  - vendor/bin/wp --allow-root core download --version=$WP_VERSION --force
  - vendor/bin/wp --allow-root config create --force --dbuser=travis --dbpass="" --dbhost="127.0.0.1"
  - vendor/bin/wp --allow-root core install --skip-email
  # We get the latest patch version here to have less maintenance on the env matrix above.
  - vendor/bin/wp --allow-root core update --minor

script:
  - composer validate --strict --no-check-lock
  - vendor/bin/phpunit

after_failure:
  - cat srv/wp-content/debug.log || true